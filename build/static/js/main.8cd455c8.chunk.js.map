{"version":3,"sources":["Components/Navbar/navbar.js","utils/api.js","Components/Search/search.js","Components/Table/table.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","API","getEmpData","axios","get","Search","props","className","onChange","handleInputChange","value","search","name","type","placeholder","id","Table","state","sortByName","results","searchEmployees","then","res","setState","data","catch","err","console","log","event","target","toLowerCase","sortByFirstName","filteredEmployees","sort","a","b","first","reverse","sortByLastName","empSort","last","this","scope","onClick","map","query","includes","src","picture","thumbnail","alt","phone","email","dob","date","login","uuid","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cd455c8.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav>\r\n            <h1>Employee Directory</h1>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import axios from 'axios';\r\nconst searchURL = \"https://randomuser.me/api/?results=25&nat=us\"\r\n\r\n//getting employee data\r\nconst API = {\r\n    getEmpData: function () {\r\n        return axios.get(searchURL);\r\n    }\r\n};\r\n\r\nexport default API","import React from \"react\";\r\n\r\n\r\nfunction Search(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <form className=\"search\">\r\n                <div className=\"form-group\">\r\n                    <label>Search for an Employee:</label>\r\n                    <input\r\n                        onChange={props.handleInputChange}\r\n                        value={props.search}\r\n                        name=\"search\"\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Search for Employee\"\r\n                        id=\"search\"\r\n                    />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Search;","import React, { Component } from 'react';\r\nimport API from '../../utils/api';\r\nimport Search from '../Search/search';\r\n\r\n\r\nclass Table extends Component {\r\n    state = {\r\n        sortByName: \"\",\r\n        search: \"\",\r\n        results: []\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.searchEmployees(\"\");\r\n    };\r\n\r\n    //search function\r\n    searchEmployees = (search) => {\r\n        API.getEmpData(search)\r\n            .then((res) => this.setState({ results: res.data.results }))\r\n            .catch((err) => console.log(err));\r\n    };\r\n\r\n    //handle input change\r\n    handleInputChange = event => {\r\n        if (event.target.name === \"search\") {\r\n            const search = event.target.value.toLowerCase();\r\n            this.setState({\r\n                search: search\r\n            })\r\n        }\r\n    };\r\n\r\n    //sorting by first name\r\n    sortByFirstName = () => {\r\n        const filteredEmployees = this.state.results.sort((a, b) => {\r\n            if (b.name.first > a.name.first) {\r\n                return -1\r\n            }\r\n            if (a.name.first > b.name.first) {\r\n                return 1\r\n            }\r\n            return 0;\r\n        });\r\n\r\n        if (this.state.sortByName === \"DESC\") {\r\n            filteredEmployees.reverse();\r\n            this.setState({ sortByName: \"ASC\" });\r\n        } else {\r\n            this.setState({ sortByName: \"DESC\" });\r\n        }\r\n        this.setState({ results: filteredEmployees })\r\n    };\r\n\r\n    //sorting by last name\r\n    sortByLastName = () => {\r\n        const empSort = this.state.results.sort((a, b) => {\r\n            if (b.name.last > a.name.last) {\r\n                return -1\r\n            }\r\n            if (a.name.last > b.name.last) {\r\n                return 1\r\n            }\r\n            return 0;\r\n        });\r\n        if (this.state.sortByName === \"DESC\") {\r\n            empSort.reverse();\r\n            this.setState({ sortByName: \"ASC\" });\r\n        } else {\r\n            this.setState({ sortByName: \"DESC\" });\r\n        }\r\n        this.setState({ results: empSort })\r\n    };\r\n\r\n    //render and handle search and sorting fucntion calls\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Search\r\n                    search={this.state.search}\r\n                    handleInputChange={this.handleInputChange} />\r\n                <div className=\"container mt-3\">\r\n                    <table className=\"table table-striped text-center table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Image</th>\r\n                                <th scope=\"col\">First Name <button type=\"button\" id=\"sort-by-name\" onClick={this.sortByFirstName}>^</button></th>\r\n                                <th scope=\"col\">Last Name <button type=\"button\" id=\"sort-by-name\" onClick={this.sortByLastName}>^</button></th>\r\n                                <th scope=\"col\">Phone</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">DoB</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {this.state.results && this.state.results.map(query =>\r\n                            query.name.first.toLowerCase().includes(this.state.search) ?\r\n                                <tbody key={query.login.uuid}>\r\n                                    <tr>\r\n                                        <th scope=\"row\"><img src={query.picture.thumbnail} alt={query.name.first} /></th>\r\n                                        <td>{query.name.first}</td>\r\n                                        <td>{query.name.last}</td>\r\n                                        <td>{query.phone}</td>\r\n                                        <td>{query.email}</td>\r\n                                        <td>{query.dob.date}</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                                :\r\n                                query.name.last.toLowerCase().includes(this.state.search) ?\r\n                                    <tbody key={query.login.uuid}>\r\n                                        <tr>\r\n                                            <th scope=\"row\"><img src={query.picture.thumbnail} alt={query.name.first} /></th>\r\n                                            <td>{query.name.first}</td>\r\n                                            <td>{query.name.last}</td>\r\n                                            <td>{query.phone}</td>\r\n                                            <td>{query.email}</td>\r\n                                            <td>{query.dob.date}</td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                    :\r\n                                    null\r\n                        )}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Table;","import './App.css';\nimport Navbar from './Components/Navbar/navbar';\nimport Table from './Components/Table/table';\n\n\nfunction App() {\n  return (\n    <>\n      <div>\n        <Navbar />\n        <Table />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}